import java.io.*;
import static java.lang.Math.random;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.util.Scanner;
import static java.lang.System.*;

public class GamePage extends javax.swing.JFrame {

    public int correct = 0;
    public int lives = 5;

    String[] words = {"IRONMAN", "THOR", "BLACKWIDOW", "DEADPOOL", "HAWKEYE", "CAPTAIN"};
    
    //to produce a random word from the array list
    Random rad = new Random();
    int index = rad.nextInt(words.length);
    public String GuessWord = words[index];
    
    //to store the individual characters of the word into a new array
    char[] value = new char[GuessWord.length()];

    //Creates new form GamePage
    public GamePage() {
        initComponents();
        //to center the window
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        X1 = new javax.swing.JLabel();
        X2 = new javax.swing.JLabel();
        X3 = new javax.swing.JLabel();
        X4 = new javax.swing.JLabel();
        X5 = new javax.swing.JLabel();
        X6 = new javax.swing.JLabel();
        X7 = new javax.swing.JLabel();
        X8 = new javax.swing.JLabel();
        X9 = new javax.swing.JLabel();
        X10 = new javax.swing.JLabel();
        lblLetter = new javax.swing.JLabel();
        txtGuess = new javax.swing.JTextField();
        Try = new javax.swing.JButton();
        lblLifeline = new javax.swing.JLabel();
        lblLives = new javax.swing.JLabel();
        lblIron1 = new javax.swing.JLabel();
        lblIron2 = new javax.swing.JLabel();
        lblIron3 = new javax.swing.JLabel();
        lblIron4 = new javax.swing.JLabel();
        lblIron5 = new javax.swing.JLabel();
        lblIron6 = new javax.swing.JLabel();
        lblIron7 = new javax.swing.JLabel();
        lblIron8 = new javax.swing.JLabel();
        lblIron9 = new javax.swing.JLabel();
        lblIron10 = new javax.swing.JLabel();
        lbllBg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HangMan");
        setPreferredSize(new java.awt.Dimension(1024, 682));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        X1.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X1.setForeground(new java.awt.Color(255, 255, 255));
        X1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X1.setText("X");
        getContentPane().add(X1);
        X1.setBounds(30, 110, 60, 50);

        X2.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X2.setForeground(new java.awt.Color(255, 255, 255));
        X2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X2.setText("X");
        getContentPane().add(X2);
        X2.setBounds(120, 110, 60, 50);

        X3.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X3.setForeground(new java.awt.Color(255, 255, 255));
        X3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X3.setText("X");
        getContentPane().add(X3);
        X3.setBounds(210, 110, 60, 50);

        X4.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X4.setForeground(new java.awt.Color(255, 255, 255));
        X4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X4.setText("X");
        getContentPane().add(X4);
        X4.setBounds(290, 110, 60, 50);

        X5.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X5.setForeground(new java.awt.Color(255, 255, 255));
        X5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X5.setText("X");
        getContentPane().add(X5);
        X5.setBounds(380, 110, 60, 50);

        X6.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X6.setForeground(new java.awt.Color(255, 255, 255));
        X6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X6.setText("X");
        getContentPane().add(X6);
        X6.setBounds(480, 110, 60, 50);

        X7.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X7.setForeground(new java.awt.Color(255, 255, 255));
        X7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X7.setText("X");
        getContentPane().add(X7);
        X7.setBounds(570, 110, 60, 50);

        X8.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X8.setForeground(new java.awt.Color(255, 255, 255));
        X8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X8.setText("X");
        getContentPane().add(X8);
        X8.setBounds(660, 110, 60, 50);

        X9.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X9.setForeground(new java.awt.Color(255, 255, 255));
        X9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X9.setText("X");
        getContentPane().add(X9);
        X9.setBounds(760, 110, 60, 50);

        X10.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        X10.setForeground(new java.awt.Color(255, 255, 255));
        X10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X10.setText("X");
        getContentPane().add(X10);
        X10.setBounds(860, 110, 60, 50);

        lblLetter.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        lblLetter.setText("Letter");
        getContentPane().add(lblLetter);
        lblLetter.setBounds(200, 210, 130, 70);

        txtGuess.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        txtGuess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGuessActionPerformed(evt);
            }
        });
        getContentPane().add(txtGuess);
        txtGuess.setBounds(380, 220, 40, 50);

        Try.setBackground(javax.swing.UIManager.getDefaults().getColor("tab_highlight_header"));
        Try.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        Try.setText("TRY");
        Try.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TryActionPerformed(evt);
            }
        });
        getContentPane().add(Try);
        Try.setBounds(510, 220, 120, 50);

        lblLifeline.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblLifeline.setText("Lives Left:");
        getContentPane().add(lblLifeline);
        lblLifeline.setBounds(240, 330, 120, 40);

        lblLives.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblLives.setText("5");
        getContentPane().add(lblLives);
        lblLives.setBounds(400, 330, 40, 40);
        getContentPane().add(lblIron1);
        lblIron1.setBounds(10, 490, 100, 160);
        getContentPane().add(lblIron2);
        lblIron2.setBounds(110, 490, 100, 160);
        getContentPane().add(lblIron3);
        lblIron3.setBounds(220, 490, 100, 160);
        getContentPane().add(lblIron4);
        lblIron4.setBounds(320, 490, 100, 160);
        getContentPane().add(lblIron5);
        lblIron5.setBounds(420, 490, 100, 160);
        getContentPane().add(lblIron6);
        lblIron6.setBounds(530, 490, 100, 160);
        getContentPane().add(lblIron7);
        lblIron7.setBounds(630, 490, 100, 160);
        getContentPane().add(lblIron8);
        lblIron8.setBounds(730, 490, 100, 160);
        getContentPane().add(lblIron9);
        lblIron9.setBounds(830, 490, 100, 160);
        getContentPane().add(lblIron10);
        lblIron10.setBounds(930, 490, 100, 160);

        lbllBg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbllBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/GameBG.jpg"))); // NOI18N
        getContentPane().add(lbllBg);
        lbllBg.setBounds(0, 0, 1024, 682);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ImageIcon iron1 = new ImageIcon(getClass().getResource("/images/Iron1.png"));
    public ImageIcon iron2 = new ImageIcon(getClass().getResource("/images/Iron2.png"));
    public ImageIcon iron3 = new ImageIcon(getClass().getResource("/images/Iron3.png"));
    public ImageIcon iron4 = new ImageIcon(getClass().getResource("/images/Iron4.png"));
    public ImageIcon iron5 = new ImageIcon(getClass().getResource("/images/Iron5.png"));
    public ImageIcon iron6 = new ImageIcon(getClass().getResource("/images/Iron6.png"));
    public ImageIcon iron7 = new ImageIcon(getClass().getResource("/images/Iron7.png"));
    public ImageIcon iron8 = new ImageIcon(getClass().getResource("/images/Iron8.png"));
    public ImageIcon iron9 = new ImageIcon(getClass().getResource("/images/Iron9.png"));
    public ImageIcon iron10 = new ImageIcon(getClass().getResource("/images/Iron10.png"));


    private void txtGuessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGuessActionPerformed
        
    }//GEN-LAST:event_txtGuessActionPerformed

    private void TryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TryActionPerformed

        try {
            //to convert the letters to UpperCase
            String Guess = txtGuess.getText().toUpperCase();
            
            //to define a character to get the first character of the user's input
            char guess = Guess.charAt(0);
            
            //storing the individual characters into the above declared array 
            for (int i = 0; i < value.length; i++) {
                value[i] = GuessWord.charAt(i);
            }
            
            int CheckWord = 0;

            //to check if the guessed letter exists in the random word generated from the array list 
            for (int x = 0; x < GuessWord.length(); x++) {
                if (guess == value[x]) {
                    switch (x) {
                        case 0:
                            X1.setText(Character.toString(guess));
                            break;
                        case 1:
                            X2.setText(Character.toString(guess));
                            break;
                        case 2:
                            X3.setText(Character.toString(guess));
                            break;
                        case 3:
                            X4.setText(Character.toString(guess));
                            break;
                        case 4:
                            X5.setText(Character.toString(guess));
                            break;
                        case 5:
                            X6.setText(Character.toString(guess));
                            break;
                        case 6:
                            X7.setText(Character.toString(guess));
                            break;
                        case 7:
                            X8.setText(Character.toString(guess));
                            break;
                        case 8:
                            X9.setText(Character.toString(guess));
                            break;
                        case 9:
                            X10.setText(Character.toString(guess));
                            break;
                    }
                    correct++;
                    //to display image accordingly
                    DisplayImage(correct);

                } else {
                    CheckWord++;

                    if (CheckWord == value.length) {
                        lives--;
                        lblLives.setText(Integer.toString(lives));
                    }

                }
                
                //to generate appropriate game won page

                if (correct == GuessWord.length()) {
                    dispose();
                    YouWon won = new YouWon();
                    won.setVisible(true);
                }
                
                //to generate appropriate game lost page
                
                if (lives == 0) {
                    dispose();
                    YouLost lost = new YouLost();
                    lost.setVisible(true);
                }
            }
            txtGuess.setText(null);
            //to always place the cursor on the Text Field
            txtGuess.requestFocus();

        } catch (Exception e) {
            //Displaying a message dialog each time the user inputs a wrong data type
            JOptionPane.showMessageDialog(rootPane, "Only input letters ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_TryActionPerformed

    //to display appropriate images according to number of correct guesses
    
    public void DisplayImage(int x) {
        switch (x) {
            case 1:
                lblIron1.setIcon(iron1);
                break;
            case 2:
                lblIron2.setIcon(iron2);
                break;
            case 3:
                lblIron3.setIcon(iron3);
                break;
            case 4:
                lblIron4.setIcon(iron4);
                break;
            case 5:
                lblIron5.setIcon(iron5);
                break;
            case 6:
                lblIron6.setIcon(iron6);
                break;
            case 7:
                lblIron7.setIcon(iron7);
                break;
            case 8:
                lblIron8.setIcon(iron8);
                break;
            case 9:
                lblIron9.setIcon(iron9);
                break;
            case 10:
                lblIron10.setIcon(iron10);
                break;
        }
    }

    //to generate only the required number of Xs on the screen according to the random word length
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        switch (GuessWord) {
            case "THOR":
                X5.setVisible(false);
                X6.setVisible(false);
                X7.setVisible(false);
                X8.setVisible(false);
                X9.setVisible(false);
                X10.setVisible(false);
                break;

            case "IRONMAN":
            case "HAWKEYE":
            case "CAPTAIN":
                X8.setVisible(false);
                X9.setVisible(false);
                X10.setVisible(false);
                break;

            case "DEADPOOL":
                X9.setVisible(false);
                X10.setVisible(false);
                break;
        }
    }//GEN-LAST:event_formWindowActivated

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Try;
    private javax.swing.JLabel X1;
    private javax.swing.JLabel X10;
    private javax.swing.JLabel X2;
    private javax.swing.JLabel X3;
    private javax.swing.JLabel X4;
    private javax.swing.JLabel X5;
    private javax.swing.JLabel X6;
    private javax.swing.JLabel X7;
    private javax.swing.JLabel X8;
    private javax.swing.JLabel X9;
    private javax.swing.JLabel lblIron1;
    private javax.swing.JLabel lblIron10;
    private javax.swing.JLabel lblIron2;
    private javax.swing.JLabel lblIron3;
    private javax.swing.JLabel lblIron4;
    private javax.swing.JLabel lblIron5;
    private javax.swing.JLabel lblIron6;
    private javax.swing.JLabel lblIron7;
    private javax.swing.JLabel lblIron8;
    private javax.swing.JLabel lblIron9;
    private javax.swing.JLabel lblLetter;
    private javax.swing.JLabel lblLifeline;
    private javax.swing.JLabel lblLives;
    private javax.swing.JLabel lbllBg;
    private javax.swing.JTextField txtGuess;
    // End of variables declaration//GEN-END:variables

}
